name: Generate HTML for every Markdown

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  generate-pages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get every Markdown files
        id: get_files
        run: |
          FILES=$(find . -type f -name "*.md" ! -name "#*" | sed 's|^\./||')

          echo "files<<EOF" >> $GITHUB_OUTPUT  # 使用 EOF 块处理多行
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "markdown files:"
          echo "$FILES"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install requests beautifulsoup4 requests_html lxml_html_clean

      - name: Process Markdown files
        if: steps.get_files.outputs.files != ''
        run: |
          mkdir -p output

          IFS=$'\n' files=(${{ steps.get_files.outputs.files }})

          for file in "${files[@]}"; do
            echo -e "Processing $file-------------------------------------\n"
            GITHUB_URL="https://github.com/${{ github.repository }}/blob/main/$file"

            file_base=$(basename "$file" .md)

            if [ "$file_base" = "README" ]; then
              OUTPUT_PATH="output/index.html"
            else
              OUTPUT_PATH="output/${file%.md}.html"
              mkdir -p $(dirname $OUTPUT_PATH)
            fi

            # 带重试机制的调用 (最多3次尝试)
            max_retries=2
            attempt=0
            until python .github/workflows/clean-page.py "$GITHUB_URL" "$OUTPUT_PATH"; do
              attempt=$((attempt + 1))
              if [ $attempt -gt $max_retries ]; then
                echo "Failed after $max_retries attempts"
                exit 1
              fi
              echo "Retrying ($attempt/$max_retries)..."
              sleep 5
            done
          done

      - name: Deploy to branch
        if: steps.get_files.outputs.files != ''
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          publish_branch: pages
          keep_files: true
          force_orphan: false
